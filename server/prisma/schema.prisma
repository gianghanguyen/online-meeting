// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  avtUrl String?
  deactivate Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  groups useringroup[]
}

model admin {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  avtUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model group {
  id Int @id @default(autoincrement())
  name String 
  description String?
  avtUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  meetings meeting[]
  members useringroup[]
  token String @unique
}

model useringroup {
  user       user     @relation(fields: [userId], references: [id])
  userId     Int 
  group   group @relation(fields: [groupId], references: [id])
  groupId Int 
  joinedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isOwner Boolean
  @@id([userId, groupId])

}

model meeting {
  id Int @id @default(autoincrement())
  meetingUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  group group @relation(fields: [groupId], references: [id])
  groupId Int
}